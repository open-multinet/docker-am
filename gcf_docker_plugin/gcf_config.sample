# This is an INI style configuration file for the GENI Control Framework
# clearinghouse and aggregate manager

# This config is used by gen-certs, gcf-am.py, gcf-ch.py, and gcf-test.py

[global]
# GENI uses URNs to identify experimenters and resources
# The URN format is specified in the GENI AM document available at: http://groups.geni.net/geni/wiki/GeniApiIdentifiers
# A URN is of the form: urn:publicid:IDN+<domain>+<type>+<name>
# The base_name variable is where you specify the domain of your CH/AM/Users.
# EG User URNs issued by your CH will be:
# urn:publicid:IDN+<base_name>+user+<user name>
# Similarly for slice
# See below for the aggregate_manager suffix
# Examples include plc//princeton, geni//gpo//gcf, and emulab.net
# base_name is in publicid format. Seee XML1.0 spec.
# Do not use more than one whitespace in a row. (Recommended: do NOT use whitespace at all)
# Do not use:  <>"{}|\^`
#
# Recommended to use: Use the DNS name of the server the AM runs on. 
# Recommended not to use: Use a numeric IP address, or a made up nickname
# Forbidden to use: Never use localhost or 127.0.0.1 as base_name!
#
base_name=docker.example.com



# The directory that stores the trusted roots of your CH/AM 
# and those you have federated with
# This can be a relative or absolute path.
rootcadir=~/geni-tools/trusted_roots/


[aggregate_manager]
# Address that the AM listens on. Recommended: 0.0.0.0  (listen on all interfaces)
host=0.0.0.0
# running the sever on port 443 is nice, because it XML-RPC uses HTTP over SSL. This port is also less lickely to be firewalled at any clients side
port=443

# Cert/key locations
keyfile=~/server_ssl/am-server-key.pem
certfile=~/server_ssl/am-server-cert.pem

# delegate must be testbed.DockerAggregateManager
delegate=testbed.DockerAggregateManager

# By default (false) the Aggregate API will accept only one connection at the same time
# Set this to 'true' if you want to enable multi-threaded XMLRPC server
# Be sure your (delegate) code is designed to handle multiple requests at the same time (concurrence)
# This option only works for AM Version 3
multithread=true

